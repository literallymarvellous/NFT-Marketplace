/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTMarket, NFTMarketInterface } from "../NFTMarket";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract ERC721",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        indexed: false,
        internalType: "struct NFTMarket.MarketItem",
        name: "markteitem",
        type: "tuple",
      },
    ],
    name: "NewMarketItem",
    type: "event",
  },
  {
    inputs: [],
    name: "fetchItemsCreated",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract ERC721",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract ERC721",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchMyNFTs",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "itemId",
            type: "uint256",
          },
          {
            internalType: "contract ERC721",
            name: "nftContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct NFTMarket.MarketItem[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "idToMarketItem",
    outputs: [
      {
        internalType: "uint256",
        name: "itemId",
        type: "uint256",
      },
      {
        internalType: "contract ERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "sold",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC721",
        name: "nftcontract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "itemid",
        type: "uint256",
      },
    ],
    name: "saleItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526611c37937e0800060045534801561001b57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f93806100746000396000f3fe6080604052600436106100705760003560e01c8063202e37401161004e578063202e3740146100e757806389bfd38f14610112578063e61a70c01461012e578063f064c32e1461017157610070565b80630f08efe01461007557806312e85585146100a057806318b24b1d146100cb575b600080fd5b34801561008157600080fd5b5061008a61019c565b6040516100979190611809565b60405180910390f35b3480156100ac57600080fd5b506100b5610592565b6040516100c2919061183a565b60405180910390f35b6100e560048036038101906100e091906118d6565b61059c565b005b3480156100f357600080fd5b506100fc610855565b6040516101099190611809565b60405180910390f35b61012c60048036038101906101279190611916565b610ccf565b005b34801561013a57600080fd5b5061015560048036038101906101509190611969565b61102a565b60405161016897969594939291906119c3565b60405180910390f35b34801561017d57600080fd5b506101866110d9565b6040516101939190611809565b60405180910390f35b606060006101aa6001611553565b905060006101b86002611553565b6101c26001611553565b6101cc9190611a61565b90506000808267ffffffffffffffff8111156101eb576101ea611a95565b5b60405190808252806020026020018201604052801561022457816020015b610211611577565b8152602001906001900390816102095790505b50905060005b84811015610587576000600560006001846102459190611ac4565b81526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff1615151515815250509050600073ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff1614156105735760006001836103e39190611ac4565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505085878151811061055657610555611b1a565b5b602002602001018190525060018661056e9190611ac4565b955050505b50808061057f90611b49565b91505061022a565b508094505050505090565b6000600454905090565b600260005414156105e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d990611bef565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600501549050600060056000848152602001908152602001600020600201549050813414610662576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065990611c5b565b60405180910390fd5b6005600084815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156106de573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161071c93929190611c8a565b600060405180830381600087803b15801561073657600080fd5b505af115801561074a573d6000803e3d6000fd5b50505050336005600085815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016005600085815260200190815260200160002060060160006101000a81548160ff0219169083151502179055506107dc6002611561565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004549081150290604051600060405180830381858888f19350505050158015610846573d6000803e3d6000fd5b50505060016000819055505050565b606060006108636001611553565b905060008060005b8381101561090c573373ffffffffffffffffffffffffffffffffffffffff166005600060018461089b9190611ac4565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156108f9576001836108f69190611ac4565b92505b808061090490611b49565b91505061086b565b5060008267ffffffffffffffff81111561092957610928611a95565b5b60405190808252806020026020018201604052801561096257816020015b61094f611577565b8152602001906001900390816109475790505b50905060005b83811015610cc4576000600560006001846109839190611ac4565b81526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505090503373ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff161415610cb0576000600183610b209190611ac4565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050858781518110610c9357610c92611b1a565b5b6020026020010181905250600186610cab9190611ac4565b955050505b508080610cbc90611b49565b915050610968565b508094505050505090565b60026000541415610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c90611bef565b60405180910390fd5b600260008190555060008111610d60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5790611d0d565b60405180910390fd5b6004543414610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b90611d79565b60405180910390fd5b610dae6001611561565b6000610dba6001611553565b905060006040518060e001604052808381526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200184815260200160001515815250905080600560008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508473ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610fa093929190611c8a565b600060405180830381600087803b158015610fba57600080fd5b505af1158015610fce573d6000803e3d6000fd5b505050507ff5185606a90d889991a9316c39411d665111fce042b53c95ce726a3bb6469423600560008481526020019081526020016000206040516110139190611f42565b60405180910390a150506001600081905550505050565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060160009054906101000a900460ff16905087565b606060006110e76001611553565b905060008060005b83811015611190573373ffffffffffffffffffffffffffffffffffffffff166005600060018461111f9190611ac4565b815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561117d5760018361117a9190611ac4565b92505b808061118890611b49565b9150506110ef565b5060008267ffffffffffffffff8111156111ad576111ac611a95565b5b6040519080825280602002602001820160405280156111e657816020015b6111d3611577565b8152602001906001900390816111cb5790505b50905060005b83811015611548576000600560006001846112079190611ac4565b81526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505090503373ffffffffffffffffffffffffffffffffffffffff16816060015173ffffffffffffffffffffffffffffffffffffffff1614156115345760006001836113a49190611ac4565b90506000600560008381526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505085878151811061151757611516611b1a565b5b602002602001018190525060018661152f9190611ac4565b955050505b50808061154090611b49565b9150506111ec565b508094505050505090565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b61163781611624565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061168261167d6116788461163d565b61165d565b61163d565b9050919050565b600061169482611667565b9050919050565b60006116a682611689565b9050919050565b6116b68161169b565b82525050565b60006116c78261163d565b9050919050565b6116d7816116bc565b82525050565b60008115159050919050565b6116f2816116dd565b82525050565b60e08201600082015161170e600085018261162e565b50602082015161172160208501826116ad565b506040820151611734604085018261162e565b50606082015161174760608501826116ce565b50608082015161175a60808501826116ce565b5060a082015161176d60a085018261162e565b5060c082015161178060c08501826116e9565b50505050565b600061179283836116f8565b60e08301905092915050565b6000602082019050919050565b60006117b6826115f8565b6117c08185611603565b93506117cb83611614565b8060005b838110156117fc5781516117e38882611786565b97506117ee8361179e565b9250506001810190506117cf565b5085935050505092915050565b6000602082019050818103600083015261182381846117ab565b905092915050565b61183481611624565b82525050565b600060208201905061184f600083018461182b565b92915050565b600080fd5b60006118658261163d565b9050919050565b60006118778261185a565b9050919050565b6118878161186c565b811461189257600080fd5b50565b6000813590506118a48161187e565b92915050565b6118b381611624565b81146118be57600080fd5b50565b6000813590506118d0816118aa565b92915050565b600080604083850312156118ed576118ec611855565b5b60006118fb85828601611895565b925050602061190c858286016118c1565b9150509250929050565b60008060006060848603121561192f5761192e611855565b5b600061193d86828701611895565b935050602061194e868287016118c1565b925050604061195f868287016118c1565b9150509250925092565b60006020828403121561197f5761197e611855565b5b600061198d848285016118c1565b91505092915050565b61199f8161169b565b82525050565b6119ae816116bc565b82525050565b6119bd816116dd565b82525050565b600060e0820190506119d8600083018a61182b565b6119e56020830189611996565b6119f2604083018861182b565b6119ff60608301876119a5565b611a0c60808301866119a5565b611a1960a083018561182b565b611a2660c08301846119b4565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a6c82611624565b9150611a7783611624565b925082821015611a8a57611a89611a32565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000611acf82611624565b9150611ada83611624565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611b0f57611b0e611a32565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611b5482611624565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b8757611b86611a32565b5b600182019050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611bd9601f83611b92565b9150611be482611ba3565b602082019050919050565b60006020820190508181036000830152611c0881611bcc565b9050919050565b7f4e6f7420657175616c20746f2061736b696e6720707269636500000000000000600082015250565b6000611c45601983611b92565b9150611c5082611c0f565b602082019050919050565b60006020820190508181036000830152611c7481611c38565b9050919050565b611c848161185a565b82525050565b6000606082019050611c9f6000830186611c7b565b611cac6020830185611c7b565b611cb9604083018461182b565b949350505050565b7f507269636520757374206265206174206c656173742031207765690000000000600082015250565b6000611cf7601b83611b92565b9150611d0282611cc1565b602082019050919050565b60006020820190508181036000830152611d2681611cea565b9050919050565b7f4e6f7420657175616c20746f206c697374696e67207072696365000000000000600082015250565b6000611d63601a83611b92565b9150611d6e82611d2d565b602082019050919050565b60006020820190508181036000830152611d9281611d56565b9050919050565b60008160001c9050919050565b6000819050919050565b6000611dc3611dbe83611d99565b611da6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dfd611df883611d99565b611dca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e37611e3283611d99565b611e04565b9050919050565b600060ff82169050919050565b6000611e5e611e5983611d99565b611e3e565b9050919050565b60e082016000808301549050611e7a81611db0565b611e87600086018261162e565b5060018301549050611e9881611dea565b611ea560208601826116ad565b5060028301549050611eb681611db0565b611ec3604086018261162e565b5060038301549050611ed481611e24565b611ee160608601826116ce565b5060048301549050611ef281611e24565b611eff60808601826116ce565b5060058301549050611f1081611db0565b611f1d60a086018261162e565b5060068301549050611f2e81611e4b565b611f3b60c08601826116e9565b5050505050565b600060e082019050611f576000830184611e65565b9291505056fea2646970667358221220fdfdf817a6a0267d5840f6d9dbe9f81f10ceabf9f23cf2e640c8bc7dd1f6d7d964736f6c634300080a0033";

type NFTMarketConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMarketConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMarket__factory extends ContractFactory {
  constructor(...args: NFTMarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NFTMarket";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTMarket> {
    return super.deploy(overrides || {}) as Promise<NFTMarket>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMarket {
    return super.attach(address) as NFTMarket;
  }
  connect(signer: Signer): NFTMarket__factory {
    return super.connect(signer) as NFTMarket__factory;
  }
  static readonly contractName: "NFTMarket";
  public readonly contractName: "NFTMarket";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMarketInterface {
    return new utils.Interface(_abi) as NFTMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarket {
    return new Contract(address, _abi, signerOrProvider) as NFTMarket;
  }
}
